{"version":3,"file":"component---src-pages-index-tsx-dcf6a4bc580e5f232b37.js","mappings":"+LAgEA,UAhCA,YAYmB,IAXLA,EAWK,EAXjBC,SAAYD,OAWK,IAVjBE,KAUiB,IATfC,KACEC,aAAgBC,EAQH,EARGA,MAAOC,EAQV,EARUA,YAAaC,EAQvB,EARuBA,QAEjBC,EAMN,EANfC,kBAAqBD,MAMN,IALfE,KAEEC,GAGa,EAJbC,gBAAmBC,gBAIN,EAHbF,WAIEG,EAA8BC,EAAAA,MAAkBf,GAChDgB,EACuB,iBAApBF,EAAOG,UAA0BH,EAAOG,SAE3CH,EAAOG,SADP,MAGN,OACE,QAAC,IAAD,CACEZ,MAAOA,EACPC,YAAaA,EACbY,IAAKX,EACLY,MAAOR,IAGP,QAAC,IAAD,CAAUK,iBAAkBA,EAAkBI,MAAOZ","sources":["webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { PostItemType } from 'types/PostItem.types'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport queryString, { ParsedQuery } from 'query-string'\r\nimport PostList from 'components/Main/PostList'\r\nimport Container from 'components/Common/Container'\r\n\r\ntype IndexPostsType = {\r\n  location: {\r\n    search: string\r\n  }\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string\r\n        description: string\r\n        siteUrl: string\r\n      }\r\n    }\r\n    allMarkdownRemark: {\r\n      edges: PostItemType[]\r\n    }\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n      publicURL: string\r\n    }\r\n  }\r\n}\r\n\r\nfunction Index({\r\n  location: { search },\r\n  data: {\r\n    site: {\r\n      siteMetadata: { title, description, siteUrl },\r\n    },\r\n    allMarkdownRemark: { edges },\r\n    file: {\r\n      childImageSharp: { gatsbyImageData },\r\n      publicURL,\r\n    },\r\n  },\r\n}: IndexPostsType) {\r\n  const parsed: ParsedQuery<string> = queryString.parse(search)\r\n  const selectedCategory: string =\r\n    typeof parsed.category !== 'string' || !parsed.category\r\n      ? 'All'\r\n      : parsed.category\r\n\r\n  return (\r\n    <Container\r\n      title={title}\r\n      description={description}\r\n      url={siteUrl}\r\n      image={publicURL}\r\n    >\r\n      {/* <Introduction profileImage={gatsbyImageData} /> */}\r\n      <PostList selectedCategory={selectedCategory} posts={edges} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Index\r\n\r\nexport const getPostList = graphql`\r\n  query getPostList {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        siteUrl\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            showThumbnail\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 170, height: 155)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: { eq: \"profile-image\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(width: 120, height: 120)\r\n      }\r\n      publicURL\r\n    }\r\n  }\r\n`\r\n"],"names":["search","location","data","site","siteMetadata","title","description","siteUrl","edges","allMarkdownRemark","file","publicURL","childImageSharp","gatsbyImageData","parsed","queryString","selectedCategory","category","url","image","posts"],"sourceRoot":""}